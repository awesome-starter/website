/**
 * name: website
 * version: v0.0.0
 * description: Provides the ability to quickly create preset projects.
 * author: chengpeiquan
 * homepage: https://preset.js.org/
 */
import{_ as a,c as o,o as s,U as e}from"./chunks/framework.6508935e.js";const g=JSON.parse('{"title":"Local Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"docs/local-configuration.md","filePath":"docs/local-configuration.md"}'),n={name:"docs/local-configuration.md"},t=e(`<h1 id="local-configuration" tabindex="-1">Local Configuration <a class="header-anchor" href="#local-configuration" aria-label="Permalink to &quot;Local Configuration {#local-configuration}&quot;">​</a></h1><p>Preset CLI provides a local configuration management function, which is convenient for you to manage commonly used private configurations.</p><h2 id="manage-local-configuration" tabindex="-1">Manage local configuration <a class="header-anchor" href="#manage-local-configuration" aria-label="Permalink to &quot;Manage local configuration {#manage-local-configuration}&quot;">​</a></h2><p>Local configuration management can be done through the <code>config</code> (alias <code>c</code>) command, which needs to be used in conjunction with subcommands.</p><h2 id="prep-work" tabindex="-1">Prep work <a class="header-anchor" href="#prep-work" aria-label="Permalink to &quot;Prep work {#prep-work}&quot;">​</a></h2><p>Create a JSON file on your computer&#39;s hard drive and write the contents of the file in the following format:</p><p>For example: <code>F:\\config\\local-preset.json</code></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">tech</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue3-ts-vite</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">desc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A template for Vue 3.0 with TypeScript, base on Vite.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">repo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://github.com/awesome-starter/vue3-ts-vite-starter</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">]</span></span></code></pre></div><p>In this way, a local configuration file is complete.</p><h2 id="set-configuration-file" tabindex="-1">Set configuration file <a class="header-anchor" href="#set-configuration-file" aria-label="Permalink to &quot;Set configuration file {#set-configuration-file}&quot;">​</a></h2><p>You can set the configuration file through the subcommand <code>set</code> of <code>config</code>. After setting, when Preset CLI reads the configuration, it will also read your local configuration.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">preset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">filePat</span><span style="color:#A6ACCD;">h</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>For example, using our previous example:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">preset config set F:\\config\\local-preset.json</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If your file path has spaces, use <code>&quot;</code> double quotes around the path.</p></div><h2 id="query-configuration-status" tabindex="-1">Query configuration status <a class="header-anchor" href="#query-configuration-status" aria-label="Permalink to &quot;Query configuration status {#query-configuration-status}&quot;">​</a></h2><p>The currently set configuration file path can be queried through the <code>get</code> subcommand of <code>config</code>.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">preset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">get</span></span></code></pre></div><p>This command is very useful if you forget where the configuration file is saved!</p><h2 id="remove-configuration-settings" tabindex="-1">Remove configuration settings <a class="header-anchor" href="#remove-configuration-settings" aria-label="Permalink to &quot;Remove configuration settings {#remove-configuration-settings}&quot;">​</a></h2><p>If you want to cancel the settings of the local configuration, you can cancel the settings with the <code>remove</code> subcommand of <code>config</code>.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">preset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remove</span></span></code></pre></div><h2 id="manage-local-technology-stacks" tabindex="-1">Manage local technology stacks <a class="header-anchor" href="#manage-local-technology-stacks" aria-label="Permalink to &quot;Manage local technology stacks {#manage-local-technology-stacks}&quot;">​</a></h2><p>The <code>config</code> command also provides an option <code>--tech</code> (abbreviated <code>-t</code>), which is used to manage the local technology stack. When you add the <code>--tech</code> option, it will enter the technology stack management mode ( instead of template configuration).</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The operation commands of the local configuration and the local technology stack are the same, the only difference is that the technology stack needs to be added with the <code>--tech</code> option.</p></div><p>For example, if you want to set your local tech stack list, just add the <code>--tech</code> option:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">preset config set F:\\config\\local-tech.json --tech</span></span></code></pre></div><p>The template format of the local technology stack is:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">color</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#42b983</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">]</span></span></code></pre></div><p>Please refer to the section <a href="./technology-stack#add-technology-stack">Add technology stack</a> for the description of JSON fields.</p>`,30),l=[t];function c(p,i,r,u,d,h){return s(),o("div",null,l)}const D=a(n,[["render",c]]);export{g as __pageData,D as default};
