/**
 * name: website
 * version: v0.0.0
 * description: Provides the ability to quickly create preset projects.
 * author: chengpeiquan
 * homepage: https://preset.js.org/
 */
import{_ as s,a}from"./chunks/github-repo-workflow.befc6a47.js";import{_ as e,c as n,o,U as l}from"./chunks/framework.6508935e.js";const g=JSON.parse('{"title":"代理下载","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"zh/docs/proxy-download.md","filePath":"zh/docs/proxy-download.md"}'),p={name:"zh/docs/proxy-download.md"},t=l('<h1 id="proxy-download" tabindex="-1">代理下载 <a class="header-anchor" href="#proxy-download" aria-label="Permalink to &quot;代理下载 {#proxy-download}&quot;">​</a></h1><p>针对部分地区下载慢的问题，我们提供了镜像代理的功能来加速下载，可以通过 <code>proxy</code> （别名 <code>p</code>） 命令来操作代理的开启 / 关闭，该命令需要结合子命令一起使用。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>代理下载主要面向中国大陆地区的开发者使用，其他地区请自行体验是否有效。</p></div><h2 id="turn-on" tabindex="-1">开启代理 <a class="header-anchor" href="#turn-on" aria-label="Permalink to &quot;开启代理 {#turn-on}&quot;">​</a></h2><p>可以通过 <code>proxy</code> 的子命令 <code>on</code> 开启代理服务。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">preset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">proxy</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span></span></code></pre></div><p>开启后，会使用国内镜像 URL 请求配置文件，在下载模板时，如果模板存在镜像服务，也将使用镜像 URL 下载。</p><h2 id="turn-off" tabindex="-1">关闭代理 <a class="header-anchor" href="#turn-off" aria-label="Permalink to &quot;关闭代理 {#turn-off}&quot;">​</a></h2><p>可以通过 <code>proxy</code> 的子命令 <code>off</code> 关闭代理服务。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">preset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">proxy</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">off</span></span></code></pre></div><p>关闭后，会使用 Preset 官网的 URL 请求配置文件，下载模板也不再通过镜像源，会直接通过 GitHub 仓库下载（或者其他源码托管平台）。</p><h2 id="about-mirror-sources" tabindex="-1">关于镜像源 <a class="header-anchor" href="#about-mirror-sources" aria-label="Permalink to &quot;关于镜像源 {#about-mirror-sources}&quot;">​</a></h2><p>根据 <a href="./starter-template#rules-for-adding-templates">添加模板的规则</a> 说明，在模板的配置文件里添加 <code>mirror</code> 字段，指向一个镜像仓库的 URL ，当代理开启并且模板的配置存在 <code>mirror</code> 字段时，会使用该镜像源下载。</p><p>在中国大陆，推荐使用 <a href="https://gitee.com" target="_blank" rel="noreferrer">Gitee</a> 、 <a href="https://www.jihulab.com" target="_blank" rel="noreferrer">极狐 GitLab</a> 、 <a href="https://coding.net/" target="_blank" rel="noreferrer">CODING DevOps</a> 等代码托管平台作为镜像仓库，相对于 GitHub ，它们在中国大陆的访问速度会非常快。</p><h2 id="set-mirror-synchronization-rules" tabindex="-1">设置镜像同步规则 <a class="header-anchor" href="#set-mirror-synchronization-rules" aria-label="Permalink to &quot;设置镜像同步规则 {#set-mirror-synchronization-rules}&quot;">​</a></h2><p>以主仓库在 GitHub ，镜像仓库在 Gitee 为例，在维护 GitHub 仓库的代码时，并不需要人工推送到 Gitee 以保证代码的实时同步。</p><p>以下是使用 GitHub Actions 实现代码自动推送的例子，模板维护者可以参考使用。</p><h3 id="generate-ssh-key" tabindex="-1">生成 SSH Key <a class="header-anchor" href="#generate-ssh-key" aria-label="Permalink to &quot;生成 SSH Key {#generate-ssh-key}&quot;">​</a></h3><p>如果还没有为 Git 账号生成 SSH Key ，需要先创建，在 GitHub Actions 的 Workflow 里，会使用 SSH 进行身份验证。</p><p>请先打开命令行工具，输入以下命令并回车运行：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">ssh-keygen</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ed25519</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-C</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">your_email@example.com</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>请注意不要为该 SSH Key 设置密码，可回车三次直接确认命令行的问题，直接生成无密码的 SSH Key 。</p></div><h3 id="get-public-key" tabindex="-1">获取公钥 <a class="header-anchor" href="#get-public-key" aria-label="Permalink to &quot;获取公钥 {#get-public-key}&quot;">​</a></h3><p>在命令行使用以下命令获取刚刚生成的 SSH 公钥：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/.ssh/id_ed25519.pub</span></span></code></pre></div><p>在浏览器打开 Gitee 的个人账户 <a href="https://gitee.com/profile/sshkeys" target="_blank" rel="noreferrer">SSH 公钥设置页面</a> ，将该公钥添加到账户资料中。</p><h3 id="get-private-key" tabindex="-1">获取私钥 <a class="header-anchor" href="#get-private-key" aria-label="Permalink to &quot;获取私钥 {#get-private-key}&quot;">​</a></h3><p>在命令行使用以下命令获取 SSH 私钥：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/.ssh/id_ed25519</span></span></code></pre></div><p>在浏览器打开在 GitHub 上的模板项目仓库，进入仓库的设置页面，添加一个 Repository Secret ，将获取到的私钥配置进去。</p><p><img src="'+s+'" alt="Github Repo Secrets"></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>由于该功能所提供的数据都是常量，所以通常使用全大写字母加下划线风格进行命名，例如这里 Gitee 的 SSH 私钥则命名为 <code>GITEE_SSH_PRIVATE_KEY</code> 。</p></div><h3 id="write-workflow" tabindex="-1">编写 Workflow <a class="header-anchor" href="#write-workflow" aria-label="Permalink to &quot;编写 Workflow {#write-workflow}&quot;">​</a></h3><p>在浏览器打开在 GitHub 上的模板项目仓库，在项目的根目录下，创建一个存放路径为 <code>./.github/workflows/sync-to-mirror.yml</code> 的文件：</p><p><img src="'+a+`" alt="Github Repo Workflow"></p><p>将以下代码配置到该 YAML 文件里：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sync-to-mirror</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9CAC;">on</span><span style="color:#89DDFF;">:</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;"># 哪些行为可以触发 Workflow</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">push</span><span style="color:#89DDFF;">:</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">pull_request</span><span style="color:#89DDFF;">:</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># 哪些分支可以触发 Workflow</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">branches</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">master</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">main</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">jobs</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">build-and-deploy</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">runs-on</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ubuntu-latest</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">steps</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Sync to Gitee</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">uses</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">wearerequired/git-mirror-action@master</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">env</span><span style="color:#89DDFF;">:</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;"># 读取名为 \`GITEE_SSH_PRIVATE_KEY\` 的私钥数据</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;"># 所有的 Repository Secret 数据都通过 \`secrets\` 变量获取。</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">SSH_PRIVATE_KEY</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">\${{ secrets.GITEE_SSH_PRIVATE_KEY }}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">with</span><span style="color:#89DDFF;">:</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;"># 源代码仓库地址</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">source-repo</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/awesome-starter/vue3-ts-vite-starter.git</span></span>
<span class="line highlighted"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;"># 镜像仓库地址（需要使用 SSH 地址）</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">destination-repo</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git@gitee.com:awesome-starter/vue3-ts-vite-starter.git</span></span></code></pre></div><p>YAML 文件配置完毕后，随着代码一起提交到仓库后，当后续指定分支出现指定行为时，会自动触发该工作流程，自动完成代码的同步。</p><p>如果需要同步到多个仓库，可以按格式配置在 <code>steps</code> 下配置多个镜像映射和密钥分配。</p>`,39),r=[t];function c(i,y,h,d,D,C){return o(),n("div",null,r)}const A=e(p,[["render",c]]);export{g as __pageData,A as default};
